name: 'Pull Request CD'

on:
  push:
    branches: [ "main" ]

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: |
        echo "${KEY}" | base64 -d > ~/key.json
        export GOOGLE_APPLICATION_CREDENTIALS=~/key.json
        cd terraform
        terraform init
      env:
        KEY: ${{secrets.SERVICE_ACCOUNT}}
        GOOGLE_APPLICATION_CREDENTIALS: ~/key.json

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      id: format
      run: |
        terraform fmt -check
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ~/key.json

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      id: apply
      run: |
        terraform validate && terraform apply -auto-approve
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ~/key.json
